
state 0
	$accept: .program $end 

	NUMBER  shift 3
	NOT  shift 4
	'('  shift 5
	.  error

	program  goto 1
	expr  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  expr.    (1)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	AND  shift 6
	OR  shift 7
	.  reduce 1 (src line 57)


state 3
	expr:  NUMBER.    (2)
	expr:  NUMBER.'<' NUMBER 
	expr:  NUMBER.'>' NUMBER 
	expr:  NUMBER.IS NUMBER 
	expr:  NUMBER.GE NUMBER 
	expr:  NUMBER.LE NUMBER 

	IS  shift 10
	'<'  shift 8
	GE  shift 11
	'>'  shift 9
	LE  shift 12
	.  reduce 2 (src line 63)


state 4
	expr:  NOT.expr 

	NUMBER  shift 3
	NOT  shift 4
	'('  shift 5
	.  error

	expr  goto 13

state 5
	expr:  '('.expr ')' 

	NUMBER  shift 3
	NOT  shift 4
	'('  shift 5
	.  error

	expr  goto 14

state 6
	expr:  expr AND.expr 

	NUMBER  shift 3
	NOT  shift 4
	'('  shift 5
	.  error

	expr  goto 15

state 7
	expr:  expr OR.expr 

	NUMBER  shift 3
	NOT  shift 4
	'('  shift 5
	.  error

	expr  goto 16

state 8
	expr:  NUMBER '<'.NUMBER 

	NUMBER  shift 17
	.  error


state 9
	expr:  NUMBER '>'.NUMBER 

	NUMBER  shift 18
	.  error


state 10
	expr:  NUMBER IS.NUMBER 

	NUMBER  shift 19
	.  error


state 11
	expr:  NUMBER GE.NUMBER 

	NUMBER  shift 20
	.  error


state 12
	expr:  NUMBER LE.NUMBER 

	NUMBER  shift 21
	.  error


state 13
	expr:  NOT expr.    (3)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 3 (src line 68)


state 14
	expr:  expr.AND expr 
	expr:  '(' expr.')' 
	expr:  expr.OR expr 

	AND  shift 6
	OR  shift 7
	')'  shift 22
	.  error


state 15
	expr:  expr.AND expr 
	expr:  expr AND expr.    (4)
	expr:  expr.OR expr 

	OR  shift 7
	.  reduce 4 (src line 72)


state 16
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (6)

	.  reduce 6 (src line 80)


state 17
	expr:  NUMBER '<' NUMBER.    (7)

	.  reduce 7 (src line 84)


state 18
	expr:  NUMBER '>' NUMBER.    (8)

	.  reduce 8 (src line 88)


state 19
	expr:  NUMBER IS NUMBER.    (9)

	.  reduce 9 (src line 92)


state 20
	expr:  NUMBER GE NUMBER.    (10)

	.  reduce 10 (src line 96)


state 21
	expr:  NUMBER LE NUMBER.    (11)

	.  reduce 11 (src line 100)


state 22
	expr:  '(' expr ')'.    (5)

	.  reduce 5 (src line 76)


14 terminals, 3 nonterminals
12 grammar rules, 23/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
52 working sets used
memory: parser 5/120000
20 extra closures
31 shift entries, 1 exceptions
6 goto entries
0 entries saved by goto default
Optimizer space used: output 25/120000
25 table entries, 0 zero
maximum spread: 14, maximum offset: 8
