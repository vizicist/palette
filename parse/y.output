
state 0
	$accept: .list $end 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	list  goto 1
	expr  goto 6
	stmt  goto 3
	stmts  goto 2
	nosemi  goto 5
	var  goto 21

state 1
	$accept:  list.$end 

	$end  accept
	.  error


state 2
	list:  stmts.    (1)

	.  reduce 1 (src line 50)


state 3
	stmts:  stmt.stmts 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 51
	nosemi  goto 5
	var  goto 21

state 4
	stmt:  ';'.    (6)

	.  reduce 6 (src line 78)


state 5
	stmt:  nosemi.    (7)

	.  reduce 7 (src line 84)


6: shift/reduce conflict (shift 72(0), red'n 8(0)) on SYM_IN
6: shift/reduce conflict (shift 80(1), red'n 8(0)) on PLUSEQ
6: shift/reduce conflict (shift 81(1), red'n 8(0)) on MINUSEQ
6: shift/reduce conflict (shift 82(1), red'n 8(0)) on MULEQ
6: shift/reduce conflict (shift 83(1), red'n 8(0)) on DIVEQ
6: shift/reduce conflict (shift 85(1), red'n 8(0)) on AMPEQ
6: shift/reduce conflict (shift 76(15), red'n 8(0)) on INC
6: shift/reduce conflict (shift 77(15), red'n 8(0)) on DEC
6: shift/reduce conflict (shift 84(1), red'n 8(0)) on OREQ
6: shift/reduce conflict (shift 86(1), red'n 8(0)) on XOREQ
6: shift/reduce conflict (shift 87(1), red'n 8(0)) on RSHIFTEQ
6: shift/reduce conflict (shift 88(1), red'n 8(0)) on LSHIFTEQ
6: shift/reduce conflict (shift 89(1), red'n 8(0)) on '='
6: shift/reduce conflict (shift 54(2), red'n 8(0)) on '?'
6: shift/reduce conflict (shift 74(4), red'n 8(0)) on OR
6: shift/reduce conflict (shift 73(5), red'n 8(0)) on AND
6: shift/reduce conflict (shift 60(6), red'n 8(0)) on '|'
6: shift/reduce conflict (shift 62(7), red'n 8(0)) on '^'
6: shift/reduce conflict (shift 61(8), red'n 8(0)) on '&'
6: shift/reduce conflict (shift 65(9), red'n 8(0)) on GT
6: shift/reduce conflict (shift 67(9), red'n 8(0)) on GE
6: shift/reduce conflict (shift 66(9), red'n 8(0)) on LT
6: shift/reduce conflict (shift 68(9), red'n 8(0)) on LE
6: shift/reduce conflict (shift 69(9), red'n 8(0)) on EQ
6: shift/reduce conflict (shift 71(9), red'n 8(0)) on NE
6: shift/reduce conflict (shift 70(9), red'n 8(0)) on REGEXEQ
6: shift/reduce conflict (shift 63(10), red'n 8(0)) on LSHIFT
6: shift/reduce conflict (shift 64(10), red'n 8(0)) on RSHIFT
6: shift/reduce conflict (shift 56(11), red'n 8(0)) on '+'
6: shift/reduce conflict (shift 57(11), red'n 8(0)) on '-'
6: shift/reduce conflict (shift 58(12), red'n 8(0)) on '*'
6: shift/reduce conflict (shift 59(12), red'n 8(0)) on '/'
6: shift/reduce conflict (shift 55(14), red'n 8(0)) on '%'
6: shift/reduce conflict (shift 78(14), red'n 8(0)) on '.'
6: shift/reduce conflict (shift 79(0), red'n 8(0)) on '('
6: shift/reduce conflict (shift 53(0), red'n 8(0)) on '{'
6: shift/reduce conflict (shift 52(0), red'n 8(0)) on '['
state 6
	nosemi:  expr.    (8)
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 8 (src line 86)

	equals  goto 75

state 7
	nosemi:  RETURN.'(' ')' 
	nosemi:  RETURN.'(' expr ')' 

	'('  shift 90
	.  error


state 8
	nosemi:  BREAK.    (11)

	.  reduce 11 (src line 99)


state 9
	nosemi:  CONTINUE.    (12)

	.  reduce 12 (src line 105)


state 10
	expr:  '{'.stmts '}' 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 91
	nosemi  goto 5
	var  goto 21

state 11
	expr:  SYM_DELETE.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 92
	var  goto 21

state 12
	expr:  WHILE.'(' expr ')' stmt 

	'('  shift 93
	.  error


state 13
	expr:  FOR.'(' optstmt ';' optrelx ';' optstmt ')' stmt 
	expr:  FOR.'(' var SYM_IN expr ')' stmt 

	'('  shift 94
	.  error


state 14
	expr:  IF.'(' expr ')' stmt 
	expr:  IF.'(' expr ')' stmt ELSE stmt 

	'('  shift 95
	.  error


state 15
	expr:  UNDEFINE.var 
	expr:  UNDEFINE.'(' var ')' 

	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	'('  shift 97
	.  error

	var  goto 96

state 16
	expr:  '['.arrlist ']' 
	arrlist: .    (122)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 122 (src line 602)

	expr  goto 100
	var  goto 21
	arritem  goto 99
	arrlist  goto 98

state 17
	expr:  INTEGER.    (23)

	.  reduce 23 (src line 171)


18: shift/reduce conflict (shift 103(0), red'n 24(0)) on DUR
18: shift/reduce conflict (shift 102(0), red'n 24(0)) on VOL
18: shift/reduce conflict (shift 106(0), red'n 24(0)) on TIME
18: shift/reduce conflict (shift 104(0), red'n 24(0)) on CHAN
18: shift/reduce conflict (shift 107(0), red'n 24(0)) on PITCH
18: shift/reduce conflict (shift 108(0), red'n 24(0)) on LENGTH
18: shift/reduce conflict (shift 112(0), red'n 24(0)) on NUMBER
18: shift/reduce conflict (shift 109(0), red'n 24(0)) on TYPE
18: shift/reduce conflict (shift 110(0), red'n 24(0)) on ATTRIB
18: shift/reduce conflict (shift 111(0), red'n 24(0)) on FLAGS
18: shift/reduce conflict (shift 105(0), red'n 24(0)) on PORT
state 18
	expr:  DOUBLE.    (24)
	expr:  DOUBLE.dottype 

	DUR  shift 103
	VOL  shift 102
	TIME  shift 106
	CHAN  shift 104
	PITCH  shift 107
	LENGTH  shift 108
	NUMBER  shift 112
	TYPE  shift 109
	ATTRIB  shift 110
	FLAGS  shift 111
	PORT  shift 105
	.  reduce 24 (src line 172)

	dottype  goto 101

state 19
	expr:  STRING.    (25)

	.  reduce 25 (src line 173)


state 20
	expr:  PHRASE.    (26)

	.  reduce 26 (src line 174)


21: shift/reduce conflict (shift 113(0), red'n 27(0)) on '('
state 21
	expr:  var.    (27)
	expr:  var.'(' arglist ')' 

	'('  shift 113
	.  reduce 27 (src line 175)


state 22
	expr:  QMARK2.    (28)

	.  reduce 28 (src line 176)


state 23
	expr:  '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 114
	var  goto 21

state 24
	expr:  DEFINED.'(' var ')' 
	expr:  DEFINED.'(' '$' ')' 
	expr:  DEFINED.'(' DOLLAR2 ')' 
	expr:  DEFINED.var 

	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	'('  shift 115
	.  error

	var  goto 116

state 25
	expr:  '-'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 117
	var  goto 21

state 26
	expr:  '~'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 118
	var  goto 21

state 27
	expr:  BANG.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 119
	var  goto 21

state 28
	expr:  INC.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 120
	var  goto 21

state 29
	expr:  DEC.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 121
	var  goto 21

state 30
	expr:  EVAL.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 122
	var  goto 21

state 31
	expr:  '$'.    (67)

	.  reduce 67 (src line 405)


state 32
	expr:  DOLLAR2.    (68)

	.  reduce 68 (src line 411)


state 33
	expr:  OBJECT.    (69)

	.  reduce 69 (src line 412)


state 34
	expr:  TASK.var '(' arglist ')' 
	expr:  TASK.expr '(' arglist ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 124
	var  goto 123

state 35
	expr:  NARGS.'(' ')' 

	'('  shift 125
	.  error


state 36
	expr:  TYPEOF.'(' expr ')' 

	'('  shift 126
	.  error


state 37
	expr:  XY.'(' expr ',' expr ')' 
	expr:  XY.'(' expr ',' expr ',' expr ',' expr ')' 

	'('  shift 127
	.  error


state 38
	expr:  FUNC.'(' expr ')' 
	expr:  FUNC.var '(' prmlist ')' '{' stmts '}' 
	expr:  FUNC.var '{' stmts '}' 
	expr:  FUNC.uniqvar '(' prmlist ')' '{' stmts '}' 
	expr:  FUNC.uniqvar '{' stmts '}' 

	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	'?'  shift 131
	'('  shift 128
	.  error

	uniqvar  goto 130
	var  goto 129

state 39
	var:  NAME.    (125)

	.  reduce 125 (src line 611)


state 40
	var:  VOL.    (126)

	.  reduce 126 (src line 612)


state 41
	var:  DUR.    (127)

	.  reduce 127 (src line 613)


state 42
	var:  CHAN.    (128)

	.  reduce 128 (src line 614)


state 43
	var:  PORT.    (129)

	.  reduce 129 (src line 615)


state 44
	var:  TIME.    (130)

	.  reduce 130 (src line 616)


state 45
	var:  PITCH.    (131)

	.  reduce 131 (src line 617)


state 46
	var:  LENGTH.    (132)

	.  reduce 132 (src line 618)


state 47
	var:  TYPE.    (133)

	.  reduce 133 (src line 619)


state 48
	var:  ATTRIB.    (134)

	.  reduce 134 (src line 620)


state 49
	var:  FLAGS.    (135)

	.  reduce 135 (src line 621)


state 50
	var:  NUMBER.    (136)

	.  reduce 136 (src line 622)


state 51
	stmts:  stmt stmts.    (3)

	.  reduce 3 (src line 58)


state 52
	expr:  expr '['.expr ']' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 132
	var  goto 21

state 53
	expr:  expr '{'.expr '}' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 133
	var  goto 21

state 54
	expr:  expr '?'.expr ':' expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 134
	var  goto 21

state 55
	expr:  expr '%'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 135
	var  goto 21

state 56
	expr:  expr '+'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 136
	var  goto 21

state 57
	expr:  expr '-'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 137
	var  goto 21

state 58
	expr:  expr '*'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 138
	var  goto 21

state 59
	expr:  expr '/'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 139
	var  goto 21

state 60
	expr:  expr '|'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 140
	var  goto 21

state 61
	expr:  expr '&'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 141
	var  goto 21

state 62
	expr:  expr '^'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 142
	var  goto 21

state 63
	expr:  expr LSHIFT.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 143
	var  goto 21

state 64
	expr:  expr RSHIFT.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 144
	var  goto 21

state 65
	expr:  expr GT.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 145
	var  goto 21

state 66
	expr:  expr LT.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 146
	var  goto 21

state 67
	expr:  expr GE.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 147
	var  goto 21

state 68
	expr:  expr LE.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 148
	var  goto 21

state 69
	expr:  expr EQ.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 149
	var  goto 21

state 70
	expr:  expr REGEXEQ.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 150
	var  goto 21

state 71
	expr:  expr NE.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 151
	var  goto 21

state 72
	expr:  expr SYM_IN.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 152
	var  goto 21

state 73
	expr:  expr AND.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 153
	var  goto 21

state 74
	expr:  expr OR.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 154
	var  goto 21

state 75
	expr:  expr equals.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 155
	var  goto 21

state 76
	expr:  expr INC.    (62)

	.  reduce 62 (src line 375)


state 77
	expr:  expr DEC.    (63)

	.  reduce 63 (src line 381)


state 78
	expr:  expr '.'.dottype 

	DUR  shift 103
	VOL  shift 102
	TIME  shift 106
	CHAN  shift 104
	PITCH  shift 107
	LENGTH  shift 108
	NUMBER  shift 112
	TYPE  shift 109
	ATTRIB  shift 110
	FLAGS  shift 111
	PORT  shift 105
	.  error

	dottype  goto 156

state 79
	expr:  expr '('.arglist ')' 
	arglist: .    (113)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	DOTDOTDOT  shift 159
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	VARG  shift 160
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 113 (src line 560)

	expr  goto 161
	arglist  goto 157
	var  goto 21
	args  goto 158

state 80
	equals:  PLUSEQ.    (95)

	.  reduce 95 (src line 505)


state 81
	equals:  MINUSEQ.    (96)

	.  reduce 96 (src line 506)


state 82
	equals:  MULEQ.    (97)

	.  reduce 97 (src line 507)


state 83
	equals:  DIVEQ.    (98)

	.  reduce 98 (src line 508)


state 84
	equals:  OREQ.    (99)

	.  reduce 99 (src line 509)


state 85
	equals:  AMPEQ.    (100)

	.  reduce 100 (src line 510)


state 86
	equals:  XOREQ.    (101)

	.  reduce 101 (src line 511)


state 87
	equals:  RSHIFTEQ.    (102)

	.  reduce 102 (src line 512)


state 88
	equals:  LSHIFTEQ.    (103)

	.  reduce 103 (src line 513)


state 89
	equals:  '='.    (104)

	.  reduce 104 (src line 514)


state 90
	nosemi:  RETURN '('.')' 
	nosemi:  RETURN '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	')'  shift 162
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 163
	var  goto 21

state 91
	expr:  '{' stmts.'}' 

	'}'  shift 164
	.  error


92: shift/reduce conflict (shift 72(0), red'n 14(0)) on SYM_IN
92: shift/reduce conflict (shift 80(1), red'n 14(0)) on PLUSEQ
92: shift/reduce conflict (shift 81(1), red'n 14(0)) on MINUSEQ
92: shift/reduce conflict (shift 82(1), red'n 14(0)) on MULEQ
92: shift/reduce conflict (shift 83(1), red'n 14(0)) on DIVEQ
92: shift/reduce conflict (shift 85(1), red'n 14(0)) on AMPEQ
92: shift/reduce conflict (shift 76(15), red'n 14(0)) on INC
92: shift/reduce conflict (shift 77(15), red'n 14(0)) on DEC
92: shift/reduce conflict (shift 84(1), red'n 14(0)) on OREQ
92: shift/reduce conflict (shift 86(1), red'n 14(0)) on XOREQ
92: shift/reduce conflict (shift 87(1), red'n 14(0)) on RSHIFTEQ
92: shift/reduce conflict (shift 88(1), red'n 14(0)) on LSHIFTEQ
92: shift/reduce conflict (shift 89(1), red'n 14(0)) on '='
92: shift/reduce conflict (shift 54(2), red'n 14(0)) on '?'
92: shift/reduce conflict (shift 74(4), red'n 14(0)) on OR
92: shift/reduce conflict (shift 73(5), red'n 14(0)) on AND
92: shift/reduce conflict (shift 60(6), red'n 14(0)) on '|'
92: shift/reduce conflict (shift 62(7), red'n 14(0)) on '^'
92: shift/reduce conflict (shift 61(8), red'n 14(0)) on '&'
92: shift/reduce conflict (shift 65(9), red'n 14(0)) on GT
92: shift/reduce conflict (shift 67(9), red'n 14(0)) on GE
92: shift/reduce conflict (shift 66(9), red'n 14(0)) on LT
92: shift/reduce conflict (shift 68(9), red'n 14(0)) on LE
92: shift/reduce conflict (shift 69(9), red'n 14(0)) on EQ
92: shift/reduce conflict (shift 71(9), red'n 14(0)) on NE
92: shift/reduce conflict (shift 70(9), red'n 14(0)) on REGEXEQ
92: shift/reduce conflict (shift 63(10), red'n 14(0)) on LSHIFT
92: shift/reduce conflict (shift 64(10), red'n 14(0)) on RSHIFT
92: shift/reduce conflict (shift 56(11), red'n 14(0)) on '+'
92: shift/reduce conflict (shift 57(11), red'n 14(0)) on '-'
92: shift/reduce conflict (shift 58(12), red'n 14(0)) on '*'
92: shift/reduce conflict (shift 59(12), red'n 14(0)) on '/'
92: shift/reduce conflict (shift 55(14), red'n 14(0)) on '%'
92: shift/reduce conflict (shift 78(14), red'n 14(0)) on '.'
92: shift/reduce conflict (shift 79(0), red'n 14(0)) on '('
92: shift/reduce conflict (shift 53(0), red'n 14(0)) on '{'
92: shift/reduce conflict (shift 52(0), red'n 14(0)) on '['
state 92
	expr:  SYM_DELETE expr.    (14)
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 14 (src line 113)

	equals  goto 75

state 93
	expr:  WHILE '('.expr ')' stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 165
	var  goto 21

state 94
	expr:  FOR '('.optstmt ';' optrelx ';' optstmt ')' stmt 
	expr:  FOR '('.var SYM_IN expr ')' stmt 
	optstmt: .    (4)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 4 (src line 75)

	expr  goto 6
	nosemi  goto 168
	optstmt  goto 166
	var  goto 167

state 95
	expr:  IF '('.expr ')' stmt 
	expr:  IF '('.expr ')' stmt ELSE stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 169
	var  goto 21

state 96
	expr:  UNDEFINE var.    (20)

	.  reduce 20 (src line 153)


state 97
	expr:  UNDEFINE '('.var ')' 

	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	.  error

	var  goto 170

state 98
	expr:  '[' arrlist.']' 
	arrlist:  arrlist.',' arritem 

	']'  shift 171
	','  shift 172
	.  error


state 99
	arrlist:  arritem.    (123)

	.  reduce 123 (src line 603)


state 100
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	arritem:  expr.'=' expr 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 173
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 101
	expr:  DOUBLE dottype.    (29)

	.  reduce 29 (src line 177)


state 102
	dottype:  VOL.    (84)

	.  reduce 84 (src line 493)


state 103
	dottype:  DUR.    (85)

	.  reduce 85 (src line 494)


state 104
	dottype:  CHAN.    (86)

	.  reduce 86 (src line 495)


state 105
	dottype:  PORT.    (87)

	.  reduce 87 (src line 496)


state 106
	dottype:  TIME.    (88)

	.  reduce 88 (src line 497)


state 107
	dottype:  PITCH.    (89)

	.  reduce 89 (src line 498)


state 108
	dottype:  LENGTH.    (90)

	.  reduce 90 (src line 499)


state 109
	dottype:  TYPE.    (91)

	.  reduce 91 (src line 500)


state 110
	dottype:  ATTRIB.    (92)

	.  reduce 92 (src line 501)


state 111
	dottype:  FLAGS.    (93)

	.  reduce 93 (src line 502)


state 112
	dottype:  NUMBER.    (94)

	.  reduce 94 (src line 503)


state 113
	expr:  var '('.arglist ')' 
	arglist: .    (113)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	DOTDOTDOT  shift 159
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	VARG  shift 160
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 113 (src line 560)

	expr  goto 161
	arglist  goto 174
	var  goto 21
	args  goto 158

state 114
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  '(' expr.')' 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 175
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 115
	expr:  DEFINED '('.var ')' 
	expr:  DEFINED '('.'$' ')' 
	expr:  DEFINED '('.DOLLAR2 ')' 

	DOLLAR2  shift 178
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	'$'  shift 177
	.  error

	var  goto 176

state 116
	expr:  DEFINED var.    (37)

	.  reduce 37 (src line 225)


117: shift/reduce conflict (shift 72(0), red'n 48(13)) on SYM_IN
117: shift/reduce conflict (shift 79(0), red'n 48(13)) on '('
117: shift/reduce conflict (shift 53(0), red'n 48(13)) on '{'
117: shift/reduce conflict (shift 52(0), red'n 48(13)) on '['
state 117
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  '-' expr.    (48)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 48 (src line 291)

	equals  goto 75

118: shift/reduce conflict (shift 72(0), red'n 49(13)) on SYM_IN
118: shift/reduce conflict (shift 79(0), red'n 49(13)) on '('
118: shift/reduce conflict (shift 53(0), red'n 49(13)) on '{'
118: shift/reduce conflict (shift 52(0), red'n 49(13)) on '['
state 118
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  '~' expr.    (49)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 49 (src line 297)

	equals  goto 75

119: shift/reduce conflict (shift 72(0), red'n 57(13)) on SYM_IN
119: shift/reduce conflict (shift 79(0), red'n 57(13)) on '('
119: shift/reduce conflict (shift 53(0), red'n 57(13)) on '{'
119: shift/reduce conflict (shift 52(0), red'n 57(13)) on '['
state 119
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  BANG expr.    (57)
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 57 (src line 345)

	equals  goto 75

120: shift/reduce conflict (shift 72(0), red'n 64(15)) on SYM_IN
120: shift/reduce conflict (shift 79(0), red'n 64(15)) on '('
120: shift/reduce conflict (shift 53(0), red'n 64(15)) on '{'
120: shift/reduce conflict (shift 52(0), red'n 64(15)) on '['
state 120
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  INC expr.    (64)
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 64 (src line 387)

	equals  goto 75

121: shift/reduce conflict (shift 72(0), red'n 65(15)) on SYM_IN
121: shift/reduce conflict (shift 79(0), red'n 65(15)) on '('
121: shift/reduce conflict (shift 53(0), red'n 65(15)) on '{'
121: shift/reduce conflict (shift 52(0), red'n 65(15)) on '['
state 121
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  DEC expr.    (65)
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 65 (src line 393)

	equals  goto 75

122: shift/reduce conflict (shift 72(0), red'n 66(0)) on SYM_IN
122: shift/reduce conflict (shift 80(1), red'n 66(0)) on PLUSEQ
122: shift/reduce conflict (shift 81(1), red'n 66(0)) on MINUSEQ
122: shift/reduce conflict (shift 82(1), red'n 66(0)) on MULEQ
122: shift/reduce conflict (shift 83(1), red'n 66(0)) on DIVEQ
122: shift/reduce conflict (shift 85(1), red'n 66(0)) on AMPEQ
122: shift/reduce conflict (shift 76(15), red'n 66(0)) on INC
122: shift/reduce conflict (shift 77(15), red'n 66(0)) on DEC
122: shift/reduce conflict (shift 84(1), red'n 66(0)) on OREQ
122: shift/reduce conflict (shift 86(1), red'n 66(0)) on XOREQ
122: shift/reduce conflict (shift 87(1), red'n 66(0)) on RSHIFTEQ
122: shift/reduce conflict (shift 88(1), red'n 66(0)) on LSHIFTEQ
122: shift/reduce conflict (shift 89(1), red'n 66(0)) on '='
122: shift/reduce conflict (shift 54(2), red'n 66(0)) on '?'
122: shift/reduce conflict (shift 74(4), red'n 66(0)) on OR
122: shift/reduce conflict (shift 73(5), red'n 66(0)) on AND
122: shift/reduce conflict (shift 60(6), red'n 66(0)) on '|'
122: shift/reduce conflict (shift 62(7), red'n 66(0)) on '^'
122: shift/reduce conflict (shift 61(8), red'n 66(0)) on '&'
122: shift/reduce conflict (shift 65(9), red'n 66(0)) on GT
122: shift/reduce conflict (shift 67(9), red'n 66(0)) on GE
122: shift/reduce conflict (shift 66(9), red'n 66(0)) on LT
122: shift/reduce conflict (shift 68(9), red'n 66(0)) on LE
122: shift/reduce conflict (shift 69(9), red'n 66(0)) on EQ
122: shift/reduce conflict (shift 71(9), red'n 66(0)) on NE
122: shift/reduce conflict (shift 70(9), red'n 66(0)) on REGEXEQ
122: shift/reduce conflict (shift 63(10), red'n 66(0)) on LSHIFT
122: shift/reduce conflict (shift 64(10), red'n 66(0)) on RSHIFT
122: shift/reduce conflict (shift 56(11), red'n 66(0)) on '+'
122: shift/reduce conflict (shift 57(11), red'n 66(0)) on '-'
122: shift/reduce conflict (shift 58(12), red'n 66(0)) on '*'
122: shift/reduce conflict (shift 59(12), red'n 66(0)) on '/'
122: shift/reduce conflict (shift 55(14), red'n 66(0)) on '%'
122: shift/reduce conflict (shift 78(14), red'n 66(0)) on '.'
122: shift/reduce conflict (shift 79(0), red'n 66(0)) on '('
122: shift/reduce conflict (shift 53(0), red'n 66(0)) on '{'
122: shift/reduce conflict (shift 52(0), red'n 66(0)) on '['
state 122
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  EVAL expr.    (66)
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 66 (src line 399)

	equals  goto 75

123: shift/reduce conflict (shift 179(0), red'n 27(0)) on '('
state 123
	expr:  var.    (27)
	expr:  TASK var.'(' arglist ')' 
	expr:  var.'(' arglist ')' 

	'('  shift 179
	.  reduce 27 (src line 175)


state 124
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  TASK expr.'(' arglist ')' 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 180
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 125
	expr:  NARGS '('.')' 

	')'  shift 181
	.  error


state 126
	expr:  TYPEOF '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 182
	var  goto 21

state 127
	expr:  XY '('.expr ',' expr ')' 
	expr:  XY '('.expr ',' expr ',' expr ',' expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 183
	var  goto 21

state 128
	expr:  FUNC '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 184
	var  goto 21

state 129
	expr:  FUNC var.'(' prmlist ')' '{' stmts '}' 
	expr:  FUNC var.'{' stmts '}' 

	'('  shift 185
	'{'  shift 186
	.  error


state 130
	expr:  FUNC uniqvar.'(' prmlist ')' '{' stmts '}' 
	expr:  FUNC uniqvar.'{' stmts '}' 

	'('  shift 187
	'{'  shift 188
	.  error


state 131
	uniqvar:  '?'.    (107)

	.  reduce 107 (src line 524)


state 132
	expr:  expr.'[' expr ']' 
	expr:  expr '[' expr.']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	']'  shift 189
	.  error

	equals  goto 75

state 133
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr '{' expr.'}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'}'  shift 190
	'['  shift 52
	.  error

	equals  goto 75

state 134
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr '?' expr.':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	':'  shift 191
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

135: shift/reduce conflict (shift 72(0), red'n 38(14)) on SYM_IN
135: shift/reduce conflict (shift 79(0), red'n 38(14)) on '('
135: shift/reduce conflict (shift 53(0), red'n 38(14)) on '{'
135: shift/reduce conflict (shift 52(0), red'n 38(14)) on '['
state 135
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (38)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 38 (src line 231)

	equals  goto 75

136: shift/reduce conflict (shift 72(0), red'n 39(11)) on SYM_IN
136: shift/reduce conflict (shift 79(0), red'n 39(11)) on '('
136: shift/reduce conflict (shift 53(0), red'n 39(11)) on '{'
136: shift/reduce conflict (shift 52(0), red'n 39(11)) on '['
state 136
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (39)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 39 (src line 237)

	equals  goto 75

137: shift/reduce conflict (shift 72(0), red'n 40(11)) on SYM_IN
137: shift/reduce conflict (shift 79(0), red'n 40(11)) on '('
137: shift/reduce conflict (shift 53(0), red'n 40(11)) on '{'
137: shift/reduce conflict (shift 52(0), red'n 40(11)) on '['
state 137
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (40)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 40 (src line 243)

	equals  goto 75

138: shift/reduce conflict (shift 72(0), red'n 41(12)) on SYM_IN
138: shift/reduce conflict (shift 79(0), red'n 41(12)) on '('
138: shift/reduce conflict (shift 53(0), red'n 41(12)) on '{'
138: shift/reduce conflict (shift 52(0), red'n 41(12)) on '['
state 138
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (41)
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 41 (src line 249)

	equals  goto 75

139: shift/reduce conflict (shift 72(0), red'n 42(12)) on SYM_IN
139: shift/reduce conflict (shift 79(0), red'n 42(12)) on '('
139: shift/reduce conflict (shift 53(0), red'n 42(12)) on '{'
139: shift/reduce conflict (shift 52(0), red'n 42(12)) on '['
state 139
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (42)
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 42 (src line 255)

	equals  goto 75

140: shift/reduce conflict (shift 72(0), red'n 43(6)) on SYM_IN
140: shift/reduce conflict (shift 79(0), red'n 43(6)) on '('
140: shift/reduce conflict (shift 53(0), red'n 43(6)) on '{'
140: shift/reduce conflict (shift 52(0), red'n 43(6)) on '['
state 140
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (43)
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 43 (src line 261)

	equals  goto 75

141: shift/reduce conflict (shift 72(0), red'n 44(8)) on SYM_IN
141: shift/reduce conflict (shift 79(0), red'n 44(8)) on '('
141: shift/reduce conflict (shift 53(0), red'n 44(8)) on '{'
141: shift/reduce conflict (shift 52(0), red'n 44(8)) on '['
state 141
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (44)
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 44 (src line 267)

	equals  goto 75

142: shift/reduce conflict (shift 72(0), red'n 45(7)) on SYM_IN
142: shift/reduce conflict (shift 79(0), red'n 45(7)) on '('
142: shift/reduce conflict (shift 53(0), red'n 45(7)) on '{'
142: shift/reduce conflict (shift 52(0), red'n 45(7)) on '['
state 142
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (45)
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 45 (src line 273)

	equals  goto 75

143: shift/reduce conflict (shift 72(0), red'n 46(10)) on SYM_IN
143: shift/reduce conflict (shift 79(0), red'n 46(10)) on '('
143: shift/reduce conflict (shift 53(0), red'n 46(10)) on '{'
143: shift/reduce conflict (shift 52(0), red'n 46(10)) on '['
state 143
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr LSHIFT expr.    (46)
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 46 (src line 279)

	equals  goto 75

144: shift/reduce conflict (shift 72(0), red'n 47(10)) on SYM_IN
144: shift/reduce conflict (shift 79(0), red'n 47(10)) on '('
144: shift/reduce conflict (shift 53(0), red'n 47(10)) on '{'
144: shift/reduce conflict (shift 52(0), red'n 47(10)) on '['
state 144
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr RSHIFT expr.    (47)
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 47 (src line 285)

	equals  goto 75

145: shift/reduce conflict (shift 72(0), red'n 50(9)) on SYM_IN
145: shift/reduce conflict (shift 79(0), red'n 50(9)) on '('
145: shift/reduce conflict (shift 53(0), red'n 50(9)) on '{'
145: shift/reduce conflict (shift 52(0), red'n 50(9)) on '['
state 145
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (50)
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 50 (src line 303)

	equals  goto 75

146: shift/reduce conflict (shift 72(0), red'n 51(9)) on SYM_IN
146: shift/reduce conflict (shift 79(0), red'n 51(9)) on '('
146: shift/reduce conflict (shift 53(0), red'n 51(9)) on '{'
146: shift/reduce conflict (shift 52(0), red'n 51(9)) on '['
state 146
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (51)
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 51 (src line 309)

	equals  goto 75

147: shift/reduce conflict (shift 72(0), red'n 52(9)) on SYM_IN
147: shift/reduce conflict (shift 79(0), red'n 52(9)) on '('
147: shift/reduce conflict (shift 53(0), red'n 52(9)) on '{'
147: shift/reduce conflict (shift 52(0), red'n 52(9)) on '['
state 147
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr GE expr.    (52)
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 52 (src line 315)

	equals  goto 75

148: shift/reduce conflict (shift 72(0), red'n 53(9)) on SYM_IN
148: shift/reduce conflict (shift 79(0), red'n 53(9)) on '('
148: shift/reduce conflict (shift 53(0), red'n 53(9)) on '{'
148: shift/reduce conflict (shift 52(0), red'n 53(9)) on '['
state 148
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr LE expr.    (53)
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 53 (src line 321)

	equals  goto 75

149: shift/reduce conflict (shift 72(0), red'n 54(9)) on SYM_IN
149: shift/reduce conflict (shift 79(0), red'n 54(9)) on '('
149: shift/reduce conflict (shift 53(0), red'n 54(9)) on '{'
149: shift/reduce conflict (shift 52(0), red'n 54(9)) on '['
state 149
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (54)
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 54 (src line 327)

	equals  goto 75

150: shift/reduce conflict (shift 72(0), red'n 55(9)) on SYM_IN
150: shift/reduce conflict (shift 79(0), red'n 55(9)) on '('
150: shift/reduce conflict (shift 53(0), red'n 55(9)) on '{'
150: shift/reduce conflict (shift 52(0), red'n 55(9)) on '['
state 150
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr REGEXEQ expr.    (55)
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 55 (src line 333)

	equals  goto 75

151: shift/reduce conflict (shift 72(0), red'n 56(9)) on SYM_IN
151: shift/reduce conflict (shift 79(0), red'n 56(9)) on '('
151: shift/reduce conflict (shift 53(0), red'n 56(9)) on '{'
151: shift/reduce conflict (shift 52(0), red'n 56(9)) on '['
state 151
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr NE expr.    (56)
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	GT  error
	GE  error
	LT  error
	LE  error
	EQ  error
	NE  error
	REGEXEQ  error
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 56 (src line 339)

	equals  goto 75

152: shift/reduce conflict (shift 72(0), red'n 58(0)) on SYM_IN
152: shift/reduce conflict (shift 80(1), red'n 58(0)) on PLUSEQ
152: shift/reduce conflict (shift 81(1), red'n 58(0)) on MINUSEQ
152: shift/reduce conflict (shift 82(1), red'n 58(0)) on MULEQ
152: shift/reduce conflict (shift 83(1), red'n 58(0)) on DIVEQ
152: shift/reduce conflict (shift 85(1), red'n 58(0)) on AMPEQ
152: shift/reduce conflict (shift 76(15), red'n 58(0)) on INC
152: shift/reduce conflict (shift 77(15), red'n 58(0)) on DEC
152: shift/reduce conflict (shift 84(1), red'n 58(0)) on OREQ
152: shift/reduce conflict (shift 86(1), red'n 58(0)) on XOREQ
152: shift/reduce conflict (shift 87(1), red'n 58(0)) on RSHIFTEQ
152: shift/reduce conflict (shift 88(1), red'n 58(0)) on LSHIFTEQ
152: shift/reduce conflict (shift 89(1), red'n 58(0)) on '='
152: shift/reduce conflict (shift 54(2), red'n 58(0)) on '?'
152: shift/reduce conflict (shift 74(4), red'n 58(0)) on OR
152: shift/reduce conflict (shift 73(5), red'n 58(0)) on AND
152: shift/reduce conflict (shift 60(6), red'n 58(0)) on '|'
152: shift/reduce conflict (shift 62(7), red'n 58(0)) on '^'
152: shift/reduce conflict (shift 61(8), red'n 58(0)) on '&'
152: shift/reduce conflict (shift 65(9), red'n 58(0)) on GT
152: shift/reduce conflict (shift 67(9), red'n 58(0)) on GE
152: shift/reduce conflict (shift 66(9), red'n 58(0)) on LT
152: shift/reduce conflict (shift 68(9), red'n 58(0)) on LE
152: shift/reduce conflict (shift 69(9), red'n 58(0)) on EQ
152: shift/reduce conflict (shift 71(9), red'n 58(0)) on NE
152: shift/reduce conflict (shift 70(9), red'n 58(0)) on REGEXEQ
152: shift/reduce conflict (shift 63(10), red'n 58(0)) on LSHIFT
152: shift/reduce conflict (shift 64(10), red'n 58(0)) on RSHIFT
152: shift/reduce conflict (shift 56(11), red'n 58(0)) on '+'
152: shift/reduce conflict (shift 57(11), red'n 58(0)) on '-'
152: shift/reduce conflict (shift 58(12), red'n 58(0)) on '*'
152: shift/reduce conflict (shift 59(12), red'n 58(0)) on '/'
152: shift/reduce conflict (shift 55(14), red'n 58(0)) on '%'
152: shift/reduce conflict (shift 78(14), red'n 58(0)) on '.'
152: shift/reduce conflict (shift 79(0), red'n 58(0)) on '('
152: shift/reduce conflict (shift 53(0), red'n 58(0)) on '{'
152: shift/reduce conflict (shift 52(0), red'n 58(0)) on '['
state 152
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr SYM_IN expr.    (58)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 58 (src line 351)

	equals  goto 75

153: shift/reduce conflict (shift 72(0), red'n 59(5)) on SYM_IN
153: shift/reduce conflict (shift 79(0), red'n 59(5)) on '('
153: shift/reduce conflict (shift 53(0), red'n 59(5)) on '{'
153: shift/reduce conflict (shift 52(0), red'n 59(5)) on '['
state 153
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (59)
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 59 (src line 357)

	equals  goto 75

154: shift/reduce conflict (shift 72(0), red'n 60(4)) on SYM_IN
154: shift/reduce conflict (shift 79(0), red'n 60(4)) on '('
154: shift/reduce conflict (shift 53(0), red'n 60(4)) on '{'
154: shift/reduce conflict (shift 52(0), red'n 60(4)) on '['
state 154
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (60)
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 60 (src line 363)

	equals  goto 75

155: shift/reduce conflict (shift 72(0), red'n 61(0)) on SYM_IN
155: shift/reduce conflict (shift 80(1), red'n 61(0)) on PLUSEQ
155: shift/reduce conflict (shift 81(1), red'n 61(0)) on MINUSEQ
155: shift/reduce conflict (shift 82(1), red'n 61(0)) on MULEQ
155: shift/reduce conflict (shift 83(1), red'n 61(0)) on DIVEQ
155: shift/reduce conflict (shift 85(1), red'n 61(0)) on AMPEQ
155: shift/reduce conflict (shift 76(15), red'n 61(0)) on INC
155: shift/reduce conflict (shift 77(15), red'n 61(0)) on DEC
155: shift/reduce conflict (shift 84(1), red'n 61(0)) on OREQ
155: shift/reduce conflict (shift 86(1), red'n 61(0)) on XOREQ
155: shift/reduce conflict (shift 87(1), red'n 61(0)) on RSHIFTEQ
155: shift/reduce conflict (shift 88(1), red'n 61(0)) on LSHIFTEQ
155: shift/reduce conflict (shift 89(1), red'n 61(0)) on '='
155: shift/reduce conflict (shift 54(2), red'n 61(0)) on '?'
155: shift/reduce conflict (shift 74(4), red'n 61(0)) on OR
155: shift/reduce conflict (shift 73(5), red'n 61(0)) on AND
155: shift/reduce conflict (shift 60(6), red'n 61(0)) on '|'
155: shift/reduce conflict (shift 62(7), red'n 61(0)) on '^'
155: shift/reduce conflict (shift 61(8), red'n 61(0)) on '&'
155: shift/reduce conflict (shift 65(9), red'n 61(0)) on GT
155: shift/reduce conflict (shift 67(9), red'n 61(0)) on GE
155: shift/reduce conflict (shift 66(9), red'n 61(0)) on LT
155: shift/reduce conflict (shift 68(9), red'n 61(0)) on LE
155: shift/reduce conflict (shift 69(9), red'n 61(0)) on EQ
155: shift/reduce conflict (shift 71(9), red'n 61(0)) on NE
155: shift/reduce conflict (shift 70(9), red'n 61(0)) on REGEXEQ
155: shift/reduce conflict (shift 63(10), red'n 61(0)) on LSHIFT
155: shift/reduce conflict (shift 64(10), red'n 61(0)) on RSHIFT
155: shift/reduce conflict (shift 56(11), red'n 61(0)) on '+'
155: shift/reduce conflict (shift 57(11), red'n 61(0)) on '-'
155: shift/reduce conflict (shift 58(12), red'n 61(0)) on '*'
155: shift/reduce conflict (shift 59(12), red'n 61(0)) on '/'
155: shift/reduce conflict (shift 55(14), red'n 61(0)) on '%'
155: shift/reduce conflict (shift 78(14), red'n 61(0)) on '.'
155: shift/reduce conflict (shift 79(0), red'n 61(0)) on '('
155: shift/reduce conflict (shift 53(0), red'n 61(0)) on '{'
155: shift/reduce conflict (shift 52(0), red'n 61(0)) on '['
state 155
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr equals expr.    (61)
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 61 (src line 369)

	equals  goto 75

state 156
	expr:  expr '.' dottype.    (70)

	.  reduce 70 (src line 413)


state 157
	expr:  expr '(' arglist.')' 

	')'  shift 192
	.  error


state 158
	arglist:  args.    (114)
	arglist:  args.',' DOTDOTDOT 
	arglist:  args.',' VARG '(' expr ')' 
	args:  args.',' expr 

	','  shift 193
	.  reduce 114 (src line 561)


state 159
	arglist:  DOTDOTDOT.    (115)

	.  reduce 115 (src line 562)


state 160
	arglist:  VARG.'(' expr ')' 

	'('  shift 194
	.  error


state 161
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	args:  expr.    (119)

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 119 (src line 587)

	equals  goto 75

state 162
	nosemi:  RETURN '(' ')'.    (9)

	.  reduce 9 (src line 87)


state 163
	nosemi:  RETURN '(' expr.')' 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 195
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 164
	expr:  '{' stmts '}'.    (13)

	.  reduce 13 (src line 112)


state 165
	expr:  WHILE '(' expr.')' stmt 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 196
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 166
	expr:  FOR '(' optstmt.';' optrelx ';' optstmt ')' stmt 

	';'  shift 197
	.  error


167: shift/reduce conflict (shift 198(0), red'n 27(0)) on SYM_IN
167: shift/reduce conflict (shift 113(0), red'n 27(0)) on '('
state 167
	expr:  FOR '(' var.SYM_IN expr ')' stmt 
	expr:  var.    (27)
	expr:  var.'(' arglist ')' 

	SYM_IN  shift 198
	'('  shift 113
	.  reduce 27 (src line 175)


state 168
	optstmt:  nosemi.    (5)

	.  reduce 5 (src line 76)


state 169
	expr:  IF '(' expr.')' stmt 
	expr:  IF '(' expr.')' stmt ELSE stmt 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 199
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 170
	expr:  UNDEFINE '(' var.')' 

	')'  shift 200
	.  error


state 171
	expr:  '[' arrlist ']'.    (22)

	.  reduce 22 (src line 165)


state 172
	arrlist:  arrlist ','.arritem 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 100
	var  goto 21
	arritem  goto 201

173: shift/reduce conflict (shift 22(0), red'n 104(1)) on QMARK2
173: shift/reduce conflict (shift 32(0), red'n 104(1)) on DOLLAR2
173: shift/reduce conflict (shift 12(0), red'n 104(1)) on WHILE
173: shift/reduce conflict (shift 14(0), red'n 104(1)) on IF
173: shift/reduce conflict (shift 13(0), red'n 104(1)) on FOR
173: shift/reduce conflict (shift 30(0), red'n 104(1)) on EVAL
173: shift/reduce conflict (shift 34(0), red'n 104(1)) on TASK
173: shift/reduce conflict (shift 11(0), red'n 104(1)) on SYM_DELETE
173: shift/reduce conflict (shift 15(0), red'n 104(1)) on UNDEFINE
173: shift/reduce conflict (shift 38(0), red'n 104(1)) on FUNC
173: shift/reduce conflict (shift 24(0), red'n 104(1)) on DEFINED
173: shift/reduce conflict (shift 35(0), red'n 104(1)) on NARGS
173: shift/reduce conflict (shift 36(0), red'n 104(1)) on TYPEOF
173: shift/reduce conflict (shift 37(0), red'n 104(1)) on XY
173: shift/reduce conflict (shift 41(0), red'n 104(1)) on DUR
173: shift/reduce conflict (shift 40(0), red'n 104(1)) on VOL
173: shift/reduce conflict (shift 44(0), red'n 104(1)) on TIME
173: shift/reduce conflict (shift 42(0), red'n 104(1)) on CHAN
173: shift/reduce conflict (shift 45(0), red'n 104(1)) on PITCH
173: shift/reduce conflict (shift 46(0), red'n 104(1)) on LENGTH
173: shift/reduce conflict (shift 50(0), red'n 104(1)) on NUMBER
173: shift/reduce conflict (shift 47(0), red'n 104(1)) on TYPE
173: shift/reduce conflict (shift 48(0), red'n 104(1)) on ATTRIB
173: shift/reduce conflict (shift 49(0), red'n 104(1)) on FLAGS
173: shift/reduce conflict (shift 43(0), red'n 104(1)) on PORT
173: shift/reduce conflict (shift 20(0), red'n 104(1)) on PHRASE
173: shift/reduce conflict (shift 19(0), red'n 104(1)) on STRING
173: shift/reduce conflict (shift 39(0), red'n 104(1)) on NAME
173: shift/reduce conflict (shift 17(0), red'n 104(1)) on INTEGER
173: shift/reduce conflict (shift 33(0), red'n 104(1)) on OBJECT
173: shift/reduce conflict (shift 18(0), red'n 104(1)) on DOUBLE
173: shift/reduce conflict (shift 31(0), red'n 104(1)) on '$'
173: shift/reduce conflict (shift 23(0), red'n 104(1)) on '('
173: shift/reduce conflict (shift 10(0), red'n 104(1)) on '{'
173: shift/reduce conflict (shift 16(0), red'n 104(1)) on '['
state 173
	equals:  '='.    (104)
	arritem:  expr '='.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 202
	var  goto 21

state 174
	expr:  var '(' arglist.')' 

	')'  shift 203
	.  error


state 175
	expr:  '(' expr ')'.    (33)

	.  reduce 33 (src line 201)


state 176
	expr:  DEFINED '(' var.')' 

	')'  shift 204
	.  error


state 177
	expr:  DEFINED '(' '$'.')' 

	')'  shift 205
	.  error


state 178
	expr:  DEFINED '(' DOLLAR2.')' 

	')'  shift 206
	.  error


state 179
	expr:  TASK var '('.arglist ')' 
	expr:  var '('.arglist ')' 
	arglist: .    (113)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	DOTDOTDOT  shift 159
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	VARG  shift 160
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 113 (src line 560)

	expr  goto 161
	arglist  goto 207
	var  goto 21
	args  goto 158

state 180
	expr:  TASK expr '('.arglist ')' 
	expr:  expr '('.arglist ')' 
	arglist: .    (113)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	DOTDOTDOT  shift 159
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	VARG  shift 160
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 113 (src line 560)

	expr  goto 161
	arglist  goto 208
	var  goto 21
	args  goto 158

state 181
	expr:  NARGS '(' ')'.    (75)

	.  reduce 75 (src line 443)


state 182
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  TYPEOF '(' expr.')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 209
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 183
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  XY '(' expr.',' expr ')' 
	expr:  XY '(' expr.',' expr ',' expr ',' expr ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	','  shift 210
	.  error

	equals  goto 75

state 184
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  FUNC '(' expr.')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 211
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 185
	expr:  FUNC var '('.prmlist ')' '{' stmts '}' 
	prmlist: .    (108)

	DOTDOTDOT  shift 214
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	.  reduce 108 (src line 531)

	var  goto 215
	prmlist  goto 212
	prms  goto 213

state 186
	expr:  FUNC var '{'.stmts '}' 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 216
	nosemi  goto 5
	var  goto 21

state 187
	expr:  FUNC uniqvar '('.prmlist ')' '{' stmts '}' 
	prmlist: .    (108)

	DOTDOTDOT  shift 214
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	.  reduce 108 (src line 531)

	var  goto 215
	prmlist  goto 217
	prms  goto 213

state 188
	expr:  FUNC uniqvar '{'.stmts '}' 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 218
	nosemi  goto 5
	var  goto 21

state 189
	expr:  expr '[' expr ']'.    (30)

	.  reduce 30 (src line 183)


state 190
	expr:  expr '{' expr '}'.    (31)

	.  reduce 31 (src line 189)


state 191
	expr:  expr '?' expr ':'.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 219
	var  goto 21

state 192
	expr:  expr '(' arglist ')'.    (74)

	.  reduce 74 (src line 437)


state 193
	arglist:  args ','.DOTDOTDOT 
	arglist:  args ','.VARG '(' expr ')' 
	args:  args ','.expr 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	DOTDOTDOT  shift 220
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	VARG  shift 221
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 222
	var  goto 21

state 194
	arglist:  VARG '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 223
	var  goto 21

state 195
	nosemi:  RETURN '(' expr ')'.    (10)

	.  reduce 10 (src line 93)


state 196
	expr:  WHILE '(' expr ')'.stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 6
	stmt  goto 224
	nosemi  goto 5
	var  goto 21

state 197
	expr:  FOR '(' optstmt ';'.optrelx ';' optstmt ')' stmt 
	optrelx: .    (105)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 105 (src line 521)

	expr  goto 226
	optrelx  goto 225
	var  goto 21

state 198
	expr:  FOR '(' var SYM_IN.expr ')' stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 227
	var  goto 21

state 199
	expr:  IF '(' expr ')'.stmt 
	expr:  IF '(' expr ')'.stmt ELSE stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 6
	stmt  goto 228
	nosemi  goto 5
	var  goto 21

state 200
	expr:  UNDEFINE '(' var ')'.    (21)

	.  reduce 21 (src line 159)


state 201
	arrlist:  arrlist ',' arritem.    (124)

	.  reduce 124 (src line 604)


state 202
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	arritem:  expr '=' expr.    (121)

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 121 (src line 595)

	equals  goto 75

state 203
	expr:  var '(' arglist ')'.    (73)

	.  reduce 73 (src line 431)


state 204
	expr:  DEFINED '(' var ')'.    (34)

	.  reduce 34 (src line 207)


state 205
	expr:  DEFINED '(' '$' ')'.    (35)

	.  reduce 35 (src line 213)


state 206
	expr:  DEFINED '(' DOLLAR2 ')'.    (36)

	.  reduce 36 (src line 219)


state 207
	expr:  TASK var '(' arglist.')' 
	expr:  var '(' arglist.')' 

	')'  shift 229
	.  error


state 208
	expr:  TASK expr '(' arglist.')' 
	expr:  expr '(' arglist.')' 

	')'  shift 230
	.  error


state 209
	expr:  TYPEOF '(' expr ')'.    (76)

	.  reduce 76 (src line 444)


state 210
	expr:  XY '(' expr ','.expr ')' 
	expr:  XY '(' expr ','.expr ',' expr ',' expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 231
	var  goto 21

state 211
	expr:  FUNC '(' expr ')'.    (79)

	.  reduce 79 (src line 462)


state 212
	expr:  FUNC var '(' prmlist.')' '{' stmts '}' 

	')'  shift 232
	.  error


state 213
	prmlist:  prms.    (109)
	prmlist:  prms.',' prmlist 

	','  shift 233
	.  reduce 109 (src line 534)


state 214
	prmlist:  DOTDOTDOT.    (110)

	.  reduce 110 (src line 540)


state 215
	prms:  var.    (112)

	.  reduce 112 (src line 553)


state 216
	expr:  FUNC var '{' stmts.'}' 

	'}'  shift 234
	.  error


state 217
	expr:  FUNC uniqvar '(' prmlist.')' '{' stmts '}' 

	')'  shift 235
	.  error


state 218
	expr:  FUNC uniqvar '{' stmts.'}' 

	'}'  shift 236
	.  error


219: shift/reduce conflict (shift 72(0), red'n 32(3)) on SYM_IN
219: shift/reduce conflict (shift 79(0), red'n 32(3)) on '('
219: shift/reduce conflict (shift 53(0), red'n 32(3)) on '{'
219: shift/reduce conflict (shift 52(0), red'n 32(3)) on '['
state 219
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr '?' expr ':' expr.    (32)
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	INC  shift 76
	DEC  shift 77
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 32 (src line 195)

	equals  goto 75

state 220
	arglist:  args ',' DOTDOTDOT.    (116)

	.  reduce 116 (src line 568)


state 221
	arglist:  args ',' VARG.'(' expr ')' 

	'('  shift 237
	.  error


state 222
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	args:  args ',' expr.    (120)

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 120 (src line 588)

	equals  goto 75

state 223
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	arglist:  VARG '(' expr.')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 238
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 224
	expr:  WHILE '(' expr ')' stmt.    (15)

	.  reduce 15 (src line 120)


state 225
	expr:  FOR '(' optstmt ';' optrelx.';' optstmt ')' stmt 

	';'  shift 239
	.  error


state 226
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	optrelx:  expr.    (106)

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	.  reduce 106 (src line 522)

	equals  goto 75

state 227
	expr:  FOR '(' var SYM_IN expr.')' stmt 
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 240
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

228: shift/reduce conflict (shift 241(0), red'n 18(0)) on ELSE
state 228
	expr:  IF '(' expr ')' stmt.    (18)
	expr:  IF '(' expr ')' stmt.ELSE stmt 

	ELSE  shift 241
	.  reduce 18 (src line 141)


 229: reduce/reduce conflict  (red'ns 71 and 73) on SYM_IN
 229: reduce/reduce conflict  (red'ns 71 and 73) on PLUSEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on MINUSEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on MULEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on DIVEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on AMPEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on INC
 229: reduce/reduce conflict  (red'ns 71 and 73) on DEC
 229: reduce/reduce conflict  (red'ns 71 and 73) on OREQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on XOREQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on RSHIFTEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on LSHIFTEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on '='
 229: reduce/reduce conflict  (red'ns 71 and 73) on '?'
 229: reduce/reduce conflict  (red'ns 71 and 73) on OR
 229: reduce/reduce conflict  (red'ns 71 and 73) on AND
 229: reduce/reduce conflict  (red'ns 71 and 73) on '|'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '^'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '&'
 229: reduce/reduce conflict  (red'ns 71 and 73) on GT
 229: reduce/reduce conflict  (red'ns 71 and 73) on GE
 229: reduce/reduce conflict  (red'ns 71 and 73) on LT
 229: reduce/reduce conflict  (red'ns 71 and 73) on LE
 229: reduce/reduce conflict  (red'ns 71 and 73) on EQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on NE
 229: reduce/reduce conflict  (red'ns 71 and 73) on REGEXEQ
 229: reduce/reduce conflict  (red'ns 71 and 73) on LSHIFT
 229: reduce/reduce conflict  (red'ns 71 and 73) on RSHIFT
 229: reduce/reduce conflict  (red'ns 71 and 73) on '+'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '-'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '*'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '/'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '%'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '.'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '('
 229: reduce/reduce conflict  (red'ns 71 and 73) on '{'
 229: reduce/reduce conflict  (red'ns 71 and 73) on '['
state 229
	expr:  TASK var '(' arglist ')'.    (71)
	expr:  var '(' arglist ')'.    (73)

	.  reduce 71 (src line 419)


 230: reduce/reduce conflict  (red'ns 72 and 74) on SYM_IN
 230: reduce/reduce conflict  (red'ns 72 and 74) on PLUSEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on MINUSEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on MULEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on DIVEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on AMPEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on INC
 230: reduce/reduce conflict  (red'ns 72 and 74) on DEC
 230: reduce/reduce conflict  (red'ns 72 and 74) on OREQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on XOREQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on RSHIFTEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on LSHIFTEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on '='
 230: reduce/reduce conflict  (red'ns 72 and 74) on '?'
 230: reduce/reduce conflict  (red'ns 72 and 74) on OR
 230: reduce/reduce conflict  (red'ns 72 and 74) on AND
 230: reduce/reduce conflict  (red'ns 72 and 74) on '|'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '^'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '&'
 230: reduce/reduce conflict  (red'ns 72 and 74) on GT
 230: reduce/reduce conflict  (red'ns 72 and 74) on GE
 230: reduce/reduce conflict  (red'ns 72 and 74) on LT
 230: reduce/reduce conflict  (red'ns 72 and 74) on LE
 230: reduce/reduce conflict  (red'ns 72 and 74) on EQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on NE
 230: reduce/reduce conflict  (red'ns 72 and 74) on REGEXEQ
 230: reduce/reduce conflict  (red'ns 72 and 74) on LSHIFT
 230: reduce/reduce conflict  (red'ns 72 and 74) on RSHIFT
 230: reduce/reduce conflict  (red'ns 72 and 74) on '+'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '-'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '*'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '/'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '%'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '.'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '('
 230: reduce/reduce conflict  (red'ns 72 and 74) on '{'
 230: reduce/reduce conflict  (red'ns 72 and 74) on '['
state 230
	expr:  TASK expr '(' arglist ')'.    (72)
	expr:  expr '(' arglist ')'.    (74)

	.  reduce 72 (src line 425)


state 231
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  XY '(' expr ',' expr.')' 
	expr:  XY '(' expr ',' expr.',' expr ',' expr ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 242
	'{'  shift 53
	'['  shift 52
	','  shift 243
	.  error

	equals  goto 75

state 232
	expr:  FUNC var '(' prmlist ')'.'{' stmts '}' 

	'{'  shift 244
	.  error


state 233
	prmlist:  prms ','.prmlist 
	prmlist: .    (108)

	DOTDOTDOT  shift 214
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	NAME  shift 39
	.  reduce 108 (src line 531)

	var  goto 215
	prmlist  goto 245
	prms  goto 213

state 234
	expr:  FUNC var '{' stmts '}'.    (81)

	.  reduce 81 (src line 474)


state 235
	expr:  FUNC uniqvar '(' prmlist ')'.'{' stmts '}' 

	'{'  shift 246
	.  error


state 236
	expr:  FUNC uniqvar '{' stmts '}'.    (83)

	.  reduce 83 (src line 486)


state 237
	arglist:  args ',' VARG '('.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 247
	var  goto 21

state 238
	arglist:  VARG '(' expr ')'.    (117)

	.  reduce 117 (src line 574)


state 239
	expr:  FOR '(' optstmt ';' optrelx ';'.optstmt ')' stmt 
	optstmt: .    (4)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 4 (src line 75)

	expr  goto 6
	nosemi  goto 168
	optstmt  goto 248
	var  goto 21

state 240
	expr:  FOR '(' var SYM_IN expr ')'.stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 6
	stmt  goto 249
	nosemi  goto 5
	var  goto 21

state 241
	expr:  IF '(' expr ')' stmt ELSE.stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 6
	stmt  goto 250
	nosemi  goto 5
	var  goto 21

state 242
	expr:  XY '(' expr ',' expr ')'.    (77)

	.  reduce 77 (src line 450)


state 243
	expr:  XY '(' expr ',' expr ','.expr ',' expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 251
	var  goto 21

state 244
	expr:  FUNC var '(' prmlist ')' '{'.stmts '}' 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 252
	nosemi  goto 5
	var  goto 21

state 245
	prmlist:  prms ',' prmlist.    (111)

	.  reduce 111 (src line 546)


state 246
	expr:  FUNC uniqvar '(' prmlist ')' '{'.stmts '}' 
	stmts: .    (2)

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  reduce 2 (src line 55)

	expr  goto 6
	stmt  goto 3
	stmts  goto 253
	nosemi  goto 5
	var  goto 21

state 247
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	arglist:  args ',' VARG '(' expr.')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 254
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 248
	expr:  FOR '(' optstmt ';' optrelx ';' optstmt.')' stmt 

	')'  shift 255
	.  error


state 249
	expr:  FOR '(' var SYM_IN expr ')' stmt.    (17)

	.  reduce 17 (src line 134)


state 250
	expr:  IF '(' expr ')' stmt ELSE stmt.    (19)

	.  reduce 19 (src line 147)


state 251
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  XY '(' expr ',' expr ',' expr.',' expr ')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	'{'  shift 53
	'['  shift 52
	','  shift 256
	.  error

	equals  goto 75

state 252
	expr:  FUNC var '(' prmlist ')' '{' stmts.'}' 

	'}'  shift 257
	.  error


state 253
	expr:  FUNC uniqvar '(' prmlist ')' '{' stmts.'}' 

	'}'  shift 258
	.  error


state 254
	arglist:  args ',' VARG '(' expr ')'.    (118)

	.  reduce 118 (src line 580)


state 255
	expr:  FOR '(' optstmt ';' optrelx ';' optstmt ')'.stmt 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	BREAK  shift 8
	CONTINUE  shift 9
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	RETURN  shift 7
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	';'  shift 4
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 6
	stmt  goto 259
	nosemi  goto 5
	var  goto 21

state 256
	expr:  XY '(' expr ',' expr ',' expr ','.expr ')' 

	QMARK2  shift 22
	DOLLAR2  shift 32
	WHILE  shift 12
	IF  shift 14
	FOR  shift 13
	EVAL  shift 30
	TASK  shift 34
	SYM_DELETE  shift 11
	UNDEFINE  shift 15
	FUNC  shift 38
	DEFINED  shift 24
	NARGS  shift 35
	TYPEOF  shift 36
	XY  shift 37
	DUR  shift 41
	VOL  shift 40
	TIME  shift 44
	CHAN  shift 42
	PITCH  shift 45
	LENGTH  shift 46
	NUMBER  shift 50
	TYPE  shift 47
	ATTRIB  shift 48
	FLAGS  shift 49
	PORT  shift 43
	PHRASE  shift 20
	STRING  shift 19
	NAME  shift 39
	INTEGER  shift 17
	OBJECT  shift 33
	DOUBLE  shift 18
	INC  shift 28
	DEC  shift 29
	'$'  shift 31
	'-'  shift 25
	BANG  shift 27
	'~'  shift 26
	'('  shift 23
	'{'  shift 10
	'['  shift 16
	.  error

	expr  goto 260
	var  goto 21

state 257
	expr:  FUNC var '(' prmlist ')' '{' stmts '}'.    (80)

	.  reduce 80 (src line 468)


state 258
	expr:  FUNC uniqvar '(' prmlist ')' '{' stmts '}'.    (82)

	.  reduce 82 (src line 480)


state 259
	expr:  FOR '(' optstmt ';' optrelx ';' optstmt ')' stmt.    (16)

	.  reduce 16 (src line 127)


state 260
	expr:  expr.'[' expr ']' 
	expr:  expr.'{' expr '}' 
	expr:  expr.'?' expr ':' expr 
	expr:  expr.'%' expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'|' expr 
	expr:  expr.'&' expr 
	expr:  expr.'^' expr 
	expr:  expr.LSHIFT expr 
	expr:  expr.RSHIFT expr 
	expr:  expr.GT expr 
	expr:  expr.LT expr 
	expr:  expr.GE expr 
	expr:  expr.LE expr 
	expr:  expr.EQ expr 
	expr:  expr.REGEXEQ expr 
	expr:  expr.NE expr 
	expr:  expr.SYM_IN expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.equals expr 
	expr:  expr.INC 
	expr:  expr.DEC 
	expr:  expr.'.' dottype 
	expr:  expr.'(' arglist ')' 
	expr:  XY '(' expr ',' expr ',' expr ',' expr.')' 

	SYM_IN  shift 72
	PLUSEQ  shift 80
	MINUSEQ  shift 81
	MULEQ  shift 82
	DIVEQ  shift 83
	AMPEQ  shift 85
	INC  shift 76
	DEC  shift 77
	OREQ  shift 84
	XOREQ  shift 86
	RSHIFTEQ  shift 87
	LSHIFTEQ  shift 88
	'='  shift 89
	'?'  shift 54
	OR  shift 74
	AND  shift 73
	'|'  shift 60
	'^'  shift 62
	'&'  shift 61
	GT  shift 65
	GE  shift 67
	LT  shift 66
	LE  shift 68
	EQ  shift 69
	NE  shift 71
	REGEXEQ  shift 70
	LSHIFT  shift 63
	RSHIFT  shift 64
	'+'  shift 56
	'-'  shift 57
	'*'  shift 58
	'/'  shift 59
	'%'  shift 55
	'.'  shift 78
	'('  shift 79
	')'  shift 261
	'{'  shift 53
	'['  shift 52
	.  error

	equals  goto 75

state 261
	expr:  XY '(' expr ',' expr ',' expr ',' expr ')'.    (78)

	.  reduce 78 (src line 456)


102 terminals, 18 nonterminals
137 grammar rules, 262/16000 states
336 shift/reduce, 74 reduce/reduce conflicts reported
117 working sets used
memory: parser 222/240000
232 extra closures
4348 shift entries, 50 exceptions
103 goto entries
152 entries saved by goto default
Optimizer space used: output 1927/240000
1927 table entries, 524 zero
maximum spread: 102, maximum offset: 256
